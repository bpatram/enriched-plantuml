' ===
' Document information helpers
' ===

!$today = %date("yyyy-MM-dd")
!$confidential = %true()
!$title = "[Untitled] (set $title)"
!$hide_meta = %false()
' !$revision_name = "1"
' !$author_name = "Your Name"
' !$company_name = "Where you work"

!procedure $add_std_header()
    !$header = ""
    !if (%variable_exists("$author_name"))
        !$header = $header + "Author: " + $author_name + "\n"
    !endif
    !if (%variable_exists("$revision_name"))
        !$header = $header + $title + " Rev. " + $revision_name + "\n"
    !endif

    !$header = $header + "Rendered on " + $today

    !if ($hide_meta == %false())
        header "$header"
    !endif
!endprocedure

!procedure $add_std_footer()
    !$footer = ""
    !if ($confidential == %true())
        skinparam FooterFontColor red
        !$footer = $footer + "Confidential"
    !endif
    !if (%variable_exists("$company_name"))
        !$footer = $footer + " - " + $company_name
    !endif

    !if ($hide_meta == %false())
        footer "\n$footer"
    !endif
!endprocedure

!procedure $add_std_title()
    !if ($hide_meta == %false())
        title "$title"
    !endif
!endprocedure

!procedure $add_std_info()
    $add_std_header()
    $add_std_footer()
    $add_std_title()
!endprocedure

' ===
' Styling Helpers
' ===

!procedure $use_word_wrap($width = 125)
    skinparam wrapWidth $width
    skinparam wrapMessageWidth $width
    skinparam maxMessageSize $width
!endprocedure

!procedure $use_horizontal_layout()
    left to right direction
!endprocedure

' ===
' Styling
' ===

!procedure $apply_std_style()
    skinparam actorStyle awesome
    skinparam arrowColor Black
    skinparam shadowing false
    skinparam padding 2
    skinparam defaultFontName Helvetica
    skinparam roundCorner 3

    skinparam Note {
        BackgroundColor Khaki
        BorderColor Olive
        BorderThickness 1
        FontSize 9
    }

    skinparam Legend {
        BackgroundColor GhostWhite
        BorderThickness 1
        BorderColor LightGrey
    }

    skinparam Database {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Boundary {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Control {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Entity {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Collections {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Queue {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Artifact {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Agent {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Actor {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Usecase {
        BackgroundColor GhostWhite
        BorderColor SlateGrey
    }

    skinparam Package {
        ' Should match Sequence.Reference styling
        HeaderBackgroundColor LightSteelBlue
        BorderColor LightSteelBlue
        BorderThickness 1
        BackgroundColor Transparent
    }
!endprocedure

' Diagram specific styles (should follow $apply_*_styles() naming convention)

!procedure $apply_activity_styles()
    ' should mimic state styling
    skinparam Activity {
        FontStyle Normal
        FontSize 12
        FontColor Black
        BackgroundColor GhostWhite
        BorderColor DarkSlateGrey
        BorderThickness 1

        Diamond {
            FontStyle Bold
            FontSize 12
            FontColor Black
            BackgroundColor LightSteelBlue
            BorderColor DarkSlateGrey
            BorderThickness 1
        }
    }

    skinparam Swimlane {
        BorderColor SlateGray
        BorderThickness 3
    }
!endprocedure

!procedure $apply_sequence_styles()
    autonumber
    autoactivate on
    hide unlinked

    skinparam actorStyle stick
    skinparam style strictuml
    skinparam BoxPadding 20

    skinparam Sequence {
        ArrowThickness 2

        Participant {
            BackgroundColor GhostWhite
            BorderColor SlateGrey
        }

        LifeLine {
            BorderColor SlateGrey
            BackgroundColor LightSteelBlue
        }

        Box {
            BackgroundColor GhostWhite
            BorderColor DarkGrey
        }

        Group {
            ' Should match Reference styling
            BackgroundColor LightSteelBlue
            BorderColor DarkSlateGrey
            BorderThickness 1
            BodyBackgroundColor Transparent
        }

        Reference {
            ' Should match Group styling
            HeaderBackgroundColor LightSteelBlue
            BorderColor DarkSlateGrey
            BorderThickness 1
            BodyBackgroundColor Transparent
        }

        Divider {
            BackgroundColor Khaki
            BorderColor Olive
        }
    }
!endprocedure

!procedure $apply_state_styles()
    hide empty description

    ' should mimick activity styling
    skinparam State {
        BackgroundColor GhostWhite
        BorderColor DarkSlateGrey
        FontColor Black
        FontStyle Bold
        FontSize 12
        AttributeFontSize 11
        AttributeFontColor DarkSlateGrey
        BorderThickness 1

        BackgroundColor<<todo>> RoyalBlue
        BorderColor<<todo>> MediumBlue
        FontColor<<todo>> White
        AttributeFontColor<<todo>> White

        BackgroundColor<<inprogress>> Gold
        BorderColor<<inprogress>> GoldenRod
        AttributeFontColor<<inprogress>> Black

        BackgroundColor<<done>> ForestGreen
        BorderColor<<done>> DarkGreen
        FontColor<<done>> White
        AttributeFontColor<<done>> White
    }
!endprocedure

!procedure $apply_class_styles()
    skinparam packageStyle Frame

    skinparam Class {
        HeaderBackgroundColor LightSteelBlue
        BackgroundColor GhostWhite
        BorderColor DarkSlateGrey
        FontStyle Bold
        FontSize 12
        FontColor Black

        AttributeFontSize 11
        AttributeFontColor DarkSlateGrey
    }

    skinparam Stereotype {
        C {
            BackgroundColor GhostWhite
            BorderColor DarkSlateGrey
        }
    }
!endprocedure

!procedure $apply_er_styles()
    ' https://github.com/plantuml/plantuml/pull/31
    hide circle
    hide empty members
    hide stereotype

    ' not sure why, but it seems entity uses the Class styles?
    skinparam Class {
        BorderColor<<table>> DarkSlateGrey
        HeaderBackgroundColor<<table>> LightSteelBlue
        FontStyle Bold
        BackgroundColor<<table>> GhostWhite

        AttributeIconSize<<table>> 8
        AttributeFontName<<table>> Menlo
        AttributeFontSize<<table>> 11
        AttributeFontColor<<table>> DarkSlateGrey
    }

    skinparam Class {
        BorderColor<<enum>> DarkRed
        HeaderBackgroundColor<<enum>> IndianRed
        BackgroundColor<<enum>> LightPink

        AttributeIconSize<<enum>> 8
        AttributeFontName<<enum>> Menlo
        AttributeFontSize<<enum>> 11
        AttributeFontColor<<enum>> DarkSlateGrey
    }
!endprocedure

!procedure $apply_generic_styles()
    ' intentionally left blank
!endprocedure


' ===
' Library Macros/Procs
' ===

!procedure $setup_std_diagram_for($style_name)
    !$diagram_style_proc_name = "$apply_" + $style_name + "_styles"
    !assert %function_exists($diagram_style_proc_name) : "Could not apply styles for '" + $style_name + "'. Typo?"

    $apply_std_style()
    %invoke_procedure($diagram_style_proc_name)
    $add_std_info()
!endprocedure

!define PK_TYPE INTEGER(11)

!define table(name) entity name<<table>>
!define enum_mapping(name, type) enum name<type><<enum>>

!define has_one(from, to) from }--|| to
!define has_many(from, to) from }--{ to
!define column_pk(name = "id") # name: PK_TYPE
!define column_pk(name = "id", type) # name: type
!define column_fk(name) + name: PK_TYPE
!define column_fk(name, type) + name: type
!define column_non_nullable(name, type) * name: type
!define column_nullable(name, type) name: type
!define omitted_columns(name = "...") //name//

!definelong timestamps()
    column_non_nullable(created_at, DATETIME)
    column_non_nullable(updated_at, DATETIME)
!enddefinelong
