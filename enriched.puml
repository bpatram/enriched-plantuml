' ===
' Document information helpers
' ===

!$today = %date("yyyy-MM-dd")
!$confidential ?= %true()
!$hide_meta ?= %false()
!$theme_data ?= {
    "textFont": "Helvetica",
    "codeFont": "Menlo",
    "canvasBackgroundColor": "White",
    "titleFontSize": 16,
    "subtitleFontSize": 14,
    "headerBackgroundColor": "LightSteelBlue",
    "headerFontColor": "Black",
    "headerFontStyle": "Bold",
    "headerFontSize": 13,
    "bodyBackgroundColor": "GhostWhite",
    "bodyFontColor": "DarkSlateGrey",
    "bodyFontSize": 12,
    "labelFontColor": "Black",
    "infoFontSize": 10,
    "enum_headerBackgroundColor": "IndianRed",
    "enum_bodyBackgroundColor": "LightPink",
    "enum_borderColor": "DarkRed",
    "sequenceDivider_headerBackgroundColor": "Khaki",
    "sequenceDivider_borderColor": "Olive",
    "note_bodyBackgroundColor": "Khaki",
    "note_borderColor": "Olive",
    "note_bodyFontSize": 10,
    "legend_bodyBackgroundColor": "GhostWhite",
    "legend_borderColor": "LightGrey",
    "symbol_borderThickness": 1.5,
    "borderColor": "DarkSlateGrey",
    "arrowColor": "Black",
    "borderThickness": 1.5
}

' !$title = "[Untitled] (set $title)"
' !$revision_name = "1"
' !$author_name = "Your Name"
' !$company_name = "Where you work"

!procedure $add_std_header()
    !$header = ""
    !if %variable_exists("$author_name")
        !$header = $header + "Author: " + $author_name + "\n"
    !endif
    !if %variable_exists("$revision_name") && %variable_exists("$title")
        !$header = $header + $title + " Rev. " + $revision_name + "\n"
    !endif

    !$header = $header + "Rendered on " + $today

    !if %not($hide_meta)
        header $header
    !endif
!endprocedure

!procedure $add_std_footer()
    !$footer = ""
    !if %variable_exists("$company_name")
        !$footer = $footer + $company_name
    !endif
    !if $confidential == %true()
        !if %strlen($footer) > 0
            !$footer = $footer + " - "
        !endif
        !$footer = $footer + "<color:red>Confidential</color>"
    !endif

    !if %not($hide_meta)
        footer \n$footer
    !endif
!endprocedure

!procedure $add_std_title()
    !if %not($hide_meta) && %variable_exists("$title")
        title $title
    !endif
!endprocedure

!procedure $add_std_info()
    $add_std_header()
    $add_std_footer()
    $add_std_title()
!endprocedure


' ===
' Styling/Layout Helpers
' ===

!procedure $use_word_wrap($width = 125)
    skinparam wrapWidth $width
    skinparam wrapMessageWidth $width
    skinparam maxMessageSize $width
!endprocedure

!procedure $use_horizontal_layout()
    left to right direction
!endprocedure

' ===
' Styling/Theming
' ===

!function $get_themed_value($key, $prefix="")
    ' TODO: add assert for key existence (once plantuml adds ability to check)
    ' TODO: fallback to unprefixed key value if no key exists with prefix

    !if %strlen($prefix) > 0
        !$prefixed_key = $prefix + "_" + $key
        !return $theme_data[$prefixed_key]
    !endif

    !return $theme_data[$key]
!endfunction

!procedure $apply_base_styles()
    skinparam actorStyle awesome
    skinparam backgroundcolor $get_themed_value("canvasBackgroundColor")
    skinparam shadowing false
    skinparam padding 2
    skinparam defaultFontName $get_themed_value("textFont")
    skinparam defaultMonospacedFontName $get_themed_value("codeFont")
    skinparam defaultFontSize $get_themed_value("bodyFontSize")
    skinparam roundCorner 5

    skinparam Title {
        FontSize $get_themed_value("titleFontSize")
    }

    skinparam Footer {
        FontSize $get_themed_value("infoFontSize")
    }

    skinparam Header {
        FontSize $get_themed_value("infoFontSize")
    }

    skinparam Arrow {
        Thickess 1
        Color $get_themed_value("arrowColor")
        FontColor $get_themed_value("labelFontColor")
    }

    skinparam Note {
        BackgroundColor $get_themed_value("bodyBackgroundColor", "note")
        BorderColor $get_themed_value("borderColor", "note")
        BorderThickness $get_themed_value("borderThickness")
        FontSize $get_themed_value("bodyFontSize", "note")
    }

    skinparam Legend {
        FontColor $get_themed_value("bodyFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor", "legend")
        BorderColor $get_themed_value("borderColor", "legend")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Label {
        FontColor $get_themed_value("labelFontColor")
    }

    skinparam Circle {
        FontColor $get_themed_value("labelFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    ' NOTE: looks like this is styling Circle
    skinparam Interface {
        FontColor $get_themed_value("labelFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Database {
        FontColor $get_themed_value("bodyFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        ' NOTE: BorderThickness not supported yet
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Boundary {
        FontColor $get_themed_value("labelFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Control {
        FontColor $get_themed_value("labelFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Entity {
        FontColor $get_themed_value("labelFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Collections {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Queue {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Artifact {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Agent {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Actor {
        FontColor $get_themed_value("labelFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Usecase {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Node {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Folder {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Component {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Cloud {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Frame {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Card {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Rectangle {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Hexagon {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Storage {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Stack {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Person {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam File {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Package {
        BorderColor $get_themed_value("borderColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        ' NOTE: cant set the title and description differently
        FontStyle Normal
        BorderThickness $get_themed_value("borderThickness")
    }

    skinparam Class {
        HeaderBackgroundColor $get_themed_value("headerBackgroundColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        FontSize $get_themed_value("headerFontSize")
        FontStyle $get_themed_value("headerFontStyle")
        FontColor $get_themed_value("headerFontColor")

        AttributeFontSize $get_themed_value("bodyFontSize")
        AttributeFontColor $get_themed_value("bodyFontColor")
        AttributeFontName $get_themed_value("codeFont")
    }

    skinparam State {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        FontStyle $get_themed_value("headerFontStyle")
        FontSize $get_themed_value("headerFontSize")
        FontColor $get_themed_value("bodyFontColor")

        AttributeFontSize $get_themed_value("bodyFontSize")
        AttributeFontColor $get_themed_value("bodyFontColor")

        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness")
    }

    ' used in class, object, and activity diagrams
    skinparam ActivityDiamond {
        BackgroundColor $get_themed_value("headerBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }
!endprocedure

' Diagram specific styles (should follow $apply_*_styles() naming convention)
' Override or extend anything not already defined in the standard styles

!procedure $apply_activity_styles()
    ' should mimic state styling
    skinparam Activity {
        FontStyle Normal
        FontColor $get_themed_value("bodyFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")

        Diamond {
            FontStyle Bold
            FontColor $get_themed_value("headerFontColor")
            BorderThickness $get_themed_value("borderThickness")
        }
    }

    skinparam Swimlane {
        TitleFontSize $get_themed_value("subtitleFontSize")
        ' TODO: add into theme json
        BorderColor SlateGray
        BorderThickness 3
    }
!endprocedure

!procedure $apply_sequence_styles()
    autonumber
    autoactivate on
    hide unlinked

    skinparam actorStyle stick
    skinparam style strictuml
    skinparam boxPadding 10

    skinparam Sequence {
        ArrowThickness 2

        Participant {
            BackgroundColor $get_themed_value("bodyBackgroundColor")
            BorderColor $get_themed_value("borderColor")
            ' use border consistent with other sequence symbols
            BorderThickness $get_themed_value("borderThickness", "symbol")
        }

        LifeLine {
            BorderColor $get_themed_value("headerBackgroundColor")
            BackgroundColor $get_themed_value("bodyBackgroundColor")
        }

        Box {
            ' TODO: use a lighter color, put into theme json
            BackgroundColor GhostWhite
            BorderColor $get_themed_value("borderColor")
            ' NOTE: border thickness not supported on box
            BorderThickness $get_themed_value("borderThickness")
        }

        Delay {
            FontColor $get_themed_value("labelFontColor")
            FontStyle Italic
        }

        Group {
            BackgroundColor $get_themed_value("headerBackgroundColor")
            BorderColor $get_themed_value("borderColor")
            BorderThickness $get_themed_value("borderThickness")
            BodyBackgroundColor Transparent
        }

        Reference {
            HeaderBackgroundColor $get_themed_value("headerBackgroundColor")
            BorderColor $get_themed_value("borderColor")
            BorderThickness $get_themed_value("borderThickness")
            BodyBackgroundColor Transparent
        }

        Divider {
            BackgroundColor $get_themed_value("headerBackgroundColor", "sequenceDivider")
            BorderColor $get_themed_value("borderColor", "sequenceDivider")
            BorderThickness 1
            FontStyle Bold
        }

    }

    skinparam Database {
        ' sequence shows databases as a symbol instead of a container with stuff inside
        FontColor $get_themed_value("labelFontColor")
        ' NOTE: BorderThickness not supported yet
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Queue {
        ' sequence shows databases as a symbol instead of a container with stuff inside
        FontColor $get_themed_value("labelFontColor")
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }

    skinparam Collections {
        ' use border consistent with other sequence symbols
        BorderThickness $get_themed_value("borderThickness", "symbol")
    }
!endprocedure

!procedure $apply_state_styles()
    hide empty description

    skinparam State<<composite>> {
        BackgroundColor $get_themed_value("headerBackgroundColor")
        FontStyle $get_themed_value("headerFontStyle")
        FontSize $get_themed_value("headerFontSize")
        FontColor $get_themed_value("headerFontColor")
    }

    skinparam State {
        ' TODO: add these into theme?
        BackgroundColor<<todo>> RoyalBlue
        BorderColor<<todo>> MediumBlue
        FontColor<<todo>> White
        AttributeFontColor<<todo>> White
    }

    skinparam State {
        BackgroundColor<<inprogress>> Gold
        BorderColor<<inprogress>> GoldenRod
        AttributeFontColor<<inprogress>> Black
    }

    skinparam State {
        BackgroundColor<<done>> ForestGreen
        BorderColor<<done>> DarkGreen
        FontColor<<done>> White
        AttributeFontColor<<done>> White
    }
!endprocedure

!procedure $apply_class_styles()
    set namespaceSeparator ::

    skinparam Package {
        Style Rectangle
        FontStyle Bold
    }

    skinparam Stereotype {
        C {
            BackgroundColor $get_themed_value("bodyBackgroundColor")
            BorderColor $get_themed_value("borderColor")
        }
    }

    ' NOTE: this is styling Circle (bug in plantuml)
    skinparam Interface {
        BackgroundColor $get_themed_value("headerBackgroundColor")
    }
!endprocedure

!procedure $apply_er_styles()
    ' https://github.com/plantuml/plantuml/pull/31
    hide circle
    hide empty members
    hide stereotype

    skinparam Package {
        Style Frame
        FontStyle Bold
    }

    skinparam Class {
        AttributeFontName<<table>> $get_themed_value("codeFont")
    }

    skinparam Class {
        BorderColor<<enum>> $get_themed_value("borderColor", "enum")
        HeaderBackgroundColor<<enum>> $get_themed_value("headerBackgroundColor", "enum")
        BackgroundColor<<enum>> $get_themed_value("bodyBackgroundColor", "enum")

        AttributeFontName<<enum>> $get_themed_value("codeFont")
    }
!endprocedure

!procedure $apply_usecase_styles()
    ' intentionally left blank
!endprocedure

!procedure $apply_generic_styles()
    ' intentionally left blank
!endprocedure


' ===
' Library Macros/Procs
' ===

!procedure $setup_std_diagram($style_name="generic")
    !$diagram_style_proc_name = "$apply_" + $style_name + "_styles"
    !assert %function_exists($diagram_style_proc_name) : "Could not apply styles for '" + $style_name + "'. Typo?"
    $apply_base_styles()
    %invoke_procedure($diagram_style_proc_name)
    $add_std_info()
!endprocedure

!define PK_TYPE INTEGER(11)

!define table(name) entity name<<table>>
!define enum_mapping(name, type) enum name<type><<enum>>

!define has_one(from, to) from }--|| to
!define has_many(from, to) from }--{ to
!define column_pk(name = "id") # name: PK_TYPE
!define column_pk(name = "id", type) # name: type
!define column_fk(name) + name: PK_TYPE
!define column_fk(name, type) + name: type
!define column_non_nullable(name, type) * name: type
!define column_nullable(name, type) name: type
!define omitted_columns(name = "...") //name//

!definelong timestamps()
    column_non_nullable(created_at, DATETIME)
    column_non_nullable(updated_at, DATETIME)
!enddefinelong
